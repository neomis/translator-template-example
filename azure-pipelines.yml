# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
      - 'v*'

pool:
  vmImage: ubuntu-latest
# pool: 'server pool'

jobs:
- job: test
  condition: startsWith(variables['build.sourceBranch'], 'refs/heads/')
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.x"
      architecture: "x64"
    displayName: "Use Python $(python.version)"
  - script: |
      python -c "import sys; print(sys.version)"
      python -m pip install --upgrade pip setuptools wheel
      pip install .[dev]
    displayName: "Install dependencies"
  - script: |
      mypy translator_template_example
    displayName: "Lint with MyPy"
  - script: |
      pylint translator_template_example
    displayName: "Lint with PyLint"
  - script: |
      pip install pytest-azurepipelines
      pytest 
    displayName: "Test with PyTest"
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

- job: package
  condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: "3.x"
        architecture: "x64"
      displayName: "Use Python $(python.version)"
    - script: |
        python -c "import sys; print(sys.version)"
        python -m pip install --upgrade pip setuptools wheel
        pip install twine keyring artifacts-keyring
        python setup.py sdist bdist_wheel
      displayName: "Build Package"
    - task: TwineAuthenticate@1
      inputs:
        artifactFeed: 'neomis'
      displayName: "Authenticate Twine"
    - script: |
        python -m twine upload -r neomis --config-file $(PYPIRC_PATH) dist/*.whl
      displayName: "Upload packages"
